@use "sass:math";

// Шрифты
$font-main: "Gilroy", sans-serif;

// Переменные
$white: #FFFFFF;
$dark: #222222;
$bg: #FFFFFF;
$bg-gray: #F9FAFB;
$black: #141C24;
$primary: #4D3EDB;
$primary-dark: #332EAE;
$gray: #ACB2C3;
$gray-dark: #E7F1FD;
$text-light: #A2A2BF;
$blue: #0269FF;
$blue-dark: #3B5774;
$intro-gradient: linear-gradient(0deg, #141C24, #141C24), linear-gradient(107.47deg, #292749 15.62%, #141C24 62.66%);

$r-30: 30px;
$r-20: 20px;
$r-15: 15px;
$r-10: 10px;

$mobile: 1199;
$mob-min: 767;

// Миксины
@mixin blur($background: #FFFFFF) {
  background-color: rgba($background, .05);
  backdrop-filter: blur(20px);
}

@mixin text($color: var(--black), $size: 14px, $weight: 400, $textTransform: uppercase, $line-height: 100%) {
  font-family: $font-main;
  font-weight: $weight;
  font-size: $size;
  line-height: $line-height;
  text-transform: $textTransform;
  color: #{$color};
}

@mixin r($width) {
  @media only screen and (max-width: $width+ "px") {
    @content
  }
}

@mixin rmin($width) {
  @media only screen and (min-width: $width+ "px") {
    @content
  }
}

@mixin hov() {
  @media (hover: hover) and (pointer: fine) {
    @content
  }
}

@mixin cover() {
  display: block;
  width: 100%;
  height: auto;
  object-fit: cover;
  object-position: center;
}

@mixin coverFull() {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

@mixin calc-width($element-width, $container-width) {
  $percent: calc(($element-width / $container-width) * 100);
  width: #{$percent}#{'%'};
}

@mixin calc-max-width($element-width, $container-width) {
  $percent: calc(($element-width / $container-width) * 100);
  max-width: #{$percent}#{'%'};
}

// Генераторы
@mixin order($num) {
  order: $num;
}

@for $i from 1 through 200 {
  .order-#{$i} {
    @include order($i);
  }
}

@mixin order-mob($num) {
  @include r($mobile) {
    order: $num;
  }
}

@for $i from 1 through 200 {
  .order-mob-#{$i} {
    @include order-mob($i);
  }
}

@mixin pt($size) {
  padding-top: math.div($size, 16) * 1rem;
}

@for $i from 1 through 200 {
  .pt-#{$i} {
    @include pt($i);
  }
}

@mixin ptm($size) {
  @include r($mobile) {
    padding-top: math.div($size, 16) * 1rem;
  }
}

@for $i from 0 through 200 {
  .ptm-#{$i} {
    @include ptm($i);
  }
}

@mixin pb($size) {
  padding-bottom: math.div($size, 16) * 1rem;
}

@for $i from 1 through 200 {
  .pb-#{$i} {
    @include pb($i);
  }
}

@mixin pbm($size) {
  @include r($mobile) {
    padding-bottom: math.div($size, 16) * 1rem;
  }
}

@for $i from 0 through 200 {
  .pbm-#{$i} {
    @include pbm($i);
  }
}

@mixin mt($size) {
  margin-top: math.div($size, 16) * 1rem;
}

@for $i from 1 through 200 {
  .mt-#{$i} {
    @include mt($i);
  }
}

@mixin mtm($size) {
  @include r($mobile) {
    margin-top: math.div($size, 16) * 1rem;
  }
}

@for $i from 0 through 200 {
  .mtm-#{$i} {
    @include mtm($i);
  }
}

@mixin mb($size) {
  margin-bottom: math.div($size, 16) * 1rem;
}

@for $i from 1 through 200 {
  .mb-#{$i} {
    @include mb($i);
  }
}

@mixin mbm($size) {
  @include r($mobile) {
    margin-bottom: math.div($size, 16) * 1rem;
  }
}

@for $i from 0 through 200 {
  .mbm-#{$i} {
    @include mbm($i);
  }
}

@for $i from 0 through 100 {
  .gap-r-#{$i} {
    row-gap: #{$i}px !important;
  }

  .gap-c-#{$i} {
    column-gap: #{$i}px !important;
  }
}
